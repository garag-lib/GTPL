{"version":3,"file":"gtpl.min.js","mappings":"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","sources":["webpack://gtpl/webpack/universalModuleDefinition","webpack://gtpl/webpack/bootstrap","webpack://gtpl/webpack/runtime/define property getters","webpack://gtpl/webpack/runtime/global","webpack://gtpl/webpack/runtime/hasOwnProperty shorthand","webpack://gtpl/./src/GUtils.ts","webpack://gtpl/./src/GProxy.ts","webpack://gtpl/./src/GGenerator.ts","webpack://gtpl/./src/global.js","webpack://gtpl/./src/GTpl.ts","webpack://gtpl/./src/compiler/GParse.ts","webpack://gtpl/./src/compiler/GCode.ts","webpack://gtpl/./src/lib/gtpl.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gtpl\"] = factory();\n\telse\n\t\troot[\"gtpl\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\nexport function css2obj(css: string) {\n    var obj: any = {}, s = css.toLowerCase().replace(/-(.)/g, function (m, g) {\n        return g.toUpperCase();\n    }).replace(/;\\s?$/g, \"\").split(/:|;/g);\n    for (var i = 0, n = s.length; i < n; i += 2)\n        obj[s[i].replace(/\\s/g, \"\")] = s[i + 1].replace(/^\\s+|\\s+$/g, \"\");\n    return obj;\n}\n\nexport function style2css(prop: any) {\n    return prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLocaleLowerCase();\n}\n\nconst typeArray = ['symbol', 'bigint', 'undefined', 'boolean', 'string', 'number'];\n\nexport function isStaticType(val: any) {\n    if (val === null || val === undefined)\n        return true;\n    const type = typeof val;\n    if (typeArray.indexOf(type) >= 0)\n        return true;\n    return false;\n}\n\nexport function log(...args: any): void {\n    //const functionName = log.caller?.name || arguments.callee.caller?.name;\n    console.log('%c----------', 'font-weight:bold');\n    console.log(...args);\n    console.log('%c----------', 'font-weight:bold');\n}\n\nexport function STACK(...args: any) {\n    //const functionName = log.caller?.name || arguments.callee.caller?.name;\n    args.push((new Error(args.shift())).stack);\n    log(...args);\n}\n","import { TypeEventProxyHandler } from './GEnums';\nimport { isStaticType } from './GUtils';\n\nexport type PathProxyHandler = any;\nexport type EventFunctionProxyHandler = (\n  type: TypeEventProxyHandler,\n  path: PathProxyHandler,\n  value: any,\n  objRef: any\n) => void;\n\nexport const ISPROXY = Symbol('is proxy');\nexport const PROXYTARGET = Symbol('proxy target');\n\nfunction getProxyHandler(event: EventFunctionProxyHandler, ojRef: any, parent?: PathProxyHandler) {\n  const ProxyHandler = {\n    get: (target: any, prop: any, receiver: any): any => {\n      if (prop == ISPROXY)\n        return true;\n      if (prop == PROXYTARGET)\n        return target;\n      const ret = Reflect.get(target, prop, receiver);\n      if (isStaticType(ret)) {\n        return ret;\n      }\n      if (!(<any>ret)[ISPROXY]) {\n        return GProxy(ret, event, ojRef, [parent, prop]);\n      }\n      return ret;\n    },\n    set: (target: any, prop: any, value: any) => {\n      //const oldvalue: any = Reflect.get(target, prop);\n      if (!isStaticType(value))\n        while (value[ISPROXY]) value = value[PROXYTARGET];\n      const ret: any = Reflect.set(target, prop, value);\n      //if (Array.isArray(target)) {\n      //  if (!isNaN(prop))\n      event(TypeEventProxyHandler.SET, [parent, prop], value, ojRef);\n      //} else {\n      //  event(TypeEventProxyHandler.SET, [parent, prop], value, ojRef);\n      //}\n      return ret;\n    },\n    deleteProperty: (target: any, prop: any) => {\n      //console.log('deleteProperty');\n      //const oldvalue: any = Reflect.get(target, prop);\n      const ret = Reflect.deleteProperty(target, prop);\n      //const isarray = Array.isArray(target);\n      event(TypeEventProxyHandler.UNSET, [parent, prop], undefined, ojRef);\n      return ret;\n    }\n    //ownKeys\n    //has\n    //defineProperty\n    //getOwnPropertyDescriptor\n  };\n  return ProxyHandler;\n}\n\nexport function GProxy(target: any, event: EventFunctionProxyHandler, objRef: any, parent?: PathProxyHandler) {\n  return new Proxy(target, getProxyHandler(event, objRef, parent));\n}\n\nexport function pathToArray(path: PathProxyHandler, arr: any[] = []): any[] {\n  path.forEach(function (p: any) {\n    if (Array.isArray(p)) {\n      pathToArray(p, arr);\n    } else {\n      arr.push(p);\n    }\n  });\n  return arr;\n}\n\nexport function pathToString(path: PathProxyHandler, arr: any[] = []): String {\n  return pathToArray(path, arr).join('.');\n}\n\nexport function* iterPath(path: PathProxyHandler): any {\n  for (let i = 0, n = path.length; i < n; i++) {\n    const p = path[i];\n    if (Array.isArray(p))\n      yield* iterPath(p);\n    else yield p;\n  }\n}\n","import { BindTypes, TypeEventProxyHandler } from './GEnums';\nexport interface IVarOrConst {\n    va?: null | TplVar,\n    ct?: null | string\n}\n\nexport interface IFunction {\n    name: TplVar,\n    params?: IVarOrConst[]\n}\n\nexport interface IIndex {\n    index: string,\n    target: string\n}\n\nexport interface IFormula {\n    code?: string,\n    vars?: TplVar[],\n    fnc?: Function\n}\n\nexport interface IObjParsed {\n    vorc?: IVarOrConst,\n    svar?: string,\n    functions?: IFunction[],\n    index?: IIndex,\n    formula?: IFormula,\n    params?: IVarOrConst[]\n}\n\nexport interface IGtplObject {\n    refresh(): unknown;\n    ID?: string,\n    Root: any,\n    Elements: any,\n    RenderElements?: any,\n    GtplChilds: Set<IGtplObject>,\n    BindMap: Map<IBindObject, IGtplObject>,\n    BindTree: any;\n    BindDef: any,\n    addBind: Function,\n    getContext: Function,\n    getValue: Function,\n    getRoot: Function,\n    getGtplRoot: Function,\n    destroy: Function,\n    eventPRoxy: Function,\n    addTo: Function,\n    launchChange: Function\n}\n\nexport interface IBindObject {\n    type: BindTypes,\n    prop?: string,\n    link: IObjParsed,\n    index?: number,\n    case?: IBindObject[],\n    gen?: ProGen,\n    uid?: string,\n    common?: any,\n    ele?: any,\n    mark?: any,\n    eles?: IGtplObject[],\n    gtpl?: IGtplObject,\n    simetric?: boolean,\n    attrs?: string[]\n}\n\n//---\n\nexport type AttrType = (string | IBindObject | string[]);\n\nexport type ProGen = string | Function;\n\nexport type TplVar = string[];\n\n//---\n\nfunction bindNode(bind: IBindObject, node?: Node, mark?: Node) {\n    if (mark)\n        bind.mark = mark;\n    if (node)\n        bind.ele = node;\n    return bind;\n}\n\nfunction appendChildsFromFnc(ele: Node | any[], childs: Node | Function | any[], objRoot: IGtplObject) {\n    //console.log('appendChildsFromFnc', ele, childs, objRoot);\n    if (Array.isArray(childs)) {\n        childs.forEach((child: any) => {\n            appendChildsFromFnc(ele, child, objRoot);\n        });\n    } else if (typeof childs == 'function') {\n        appendChildsFromFnc(ele, childs(objRoot), objRoot);\n    } else if (childs !== null && childs !== undefined) {\n        if (Array.isArray(ele)) {\n            ele.push(childs);\n        } else {\n            ele.appendChild(childs);\n            /*\n            try {\n                if (ele.nodeName && ele.nodeName.toLowerCase() == 'select' &&\n                    childs.nodeName && childs.nodeName.toLowerCase() == 'option') {\n                    if ((ele as HTMLSelectElement).value !== '' &&\n                        (ele as HTMLSelectElement).value === (childs as HTMLOptionElement).value) {\n                        (childs as HTMLOptionElement).selected = true;\n                    }\n                }\n            } catch (ex) { console.error(ex); }\n            */\n        }\n    }\n}\n\nfunction createElement(nodeName: string, attributes: AttrType[], fncChilds: Function, objRoot: IGtplObject) {\n    //console.log('createElement', nodeName, attributes, fncChilds, objRoot);\n    let tempvar: any = null;\n    switch (nodeName) {\n        case '#text':\n            if (tempvar == null)\n                tempvar = document.createTextNode('');\n            if (typeof attributes == 'string')\n                tempvar.textContent = attributes;\n        case '#comment':\n            if (tempvar == null)\n                tempvar = document.createComment('');\n            if (typeof attributes == 'string') {\n                tempvar.textContent = attributes;\n            } else {\n                attributes.forEach((attr) => {\n                    if (typeof attr == 'string') {\n                        tempvar.textContent = attr;\n                        return;\n                    }\n                    if (Array.isArray(attr)) {\n                        console.error(tempvar, attr);\n                        return;\n                    }\n                    if (attr.type == BindTypes.TEXT)\n                        objRoot.addBind(bindNode(<IBindObject>attr, tempvar));\n                    else objRoot.addBind(bindNode(<IBindObject>attr, undefined, tempvar));\n                });\n            }\n            return tempvar;\n        default:\n            const ele = document.createElement(nodeName);\n            appendChildsFromFnc(ele, fncChilds, objRoot);\n            if (Array.isArray(attributes)) {\n                attributes.forEach((attr) => {\n                    if (Array.isArray(attr)) {\n                        ele.setAttribute(attr[0], attr[1]);\n                    } else {\n                        const bind: IBindObject = <IBindObject>attr;\n                        objRoot.addBind(bindNode(bind, ele));\n                    }\n                });\n            }\n            return ele;\n    }\n}\n\nfunction compile(gcode: string, ggenerator?: any): any {\n    return new Function('g', `return ${gcode};`)(ggenerator ? ggenerator : createElement);\n}\n\nexport const GGenerator = createElement;\n\nexport const GAddToo = appendChildsFromFnc;\n\nexport const GCompile = compile;","//---\n\nlet temp = null;\n\nfunction check(it) {\n    return it && it.Math === Math && it;\n}\n\ntry {\n    temp =\n        check(typeof window === 'object' && window) ||\n        check(typeof self === 'object' && self) ||\n        check(typeof global === 'object' && global) ||\n        (function () { return this; })() ||\n        Function('return this')();\n} catch (ex) {\n\n}\n\nexport const globalObject = temp;\n\n//---\n\nlet ptemp = null;\n\ntry {\n    const options = {\n        get passive() {\n            ptemp = true;\n            return false;\n        },\n    };\n    globalObject.addEventListener(\"test\", null, options);\n    globalObject.removeEventListener(\"test\", null, options);\n} catch (err) {\n    ptemp = false;\n}\n\nexport const passiveSupported = ptemp;\n\n//---","import { BindTypes, TypeEventProxyHandler } from \"./GEnums\";\nimport { IGtplObject, IBindObject, IIndex } from \"./GGenerator\";\nimport {\n  GProxy,\n  pathToArray,\n  PathProxyHandler,\n  PROXYTARGET,\n  ISPROXY,\n} from \"./GProxy\";\nimport { TplVar, GAddToo, IFunction, IVarOrConst } from \"./GGenerator\";\nimport { globalObject, passiveSupported } from \"./global\";\nimport { STACK, isStaticType, log } from \"./GUtils\";\n\nexport interface IBindDef {\n  key: string;\n  val: any;\n  pro: any;\n}\n\nconst globalCache: any = {\n  binitChangeEvents: false,\n};\n\n//---\nclass privateProperties {\n  private static globalVar = new WeakMap();\n\n  static init(gtpl: IGtplObject) {\n    if (!privateProperties.globalVar.has(gtpl)) {\n      privateProperties.globalVar.set(gtpl, {\n        GenerationFinish: false,\n        MarkEle: new WeakMap(),\n        memValues: new WeakMap(),\n        renderElements: new Set(),\n      });\n    }\n  }\n\n  static getProperty(gtpl: IGtplObject, key: string) {\n    privateProperties.init(gtpl);\n    const obj = privateProperties.globalVar.get(gtpl);\n    return obj[key];\n  }\n\n  static setProperty(gtpl: IGtplObject, key: string, value: any) {\n    privateProperties.init(gtpl);\n    const obj = privateProperties.globalVar.get(gtpl);\n    obj[key] = value;\n  }\n}\n\n//---\n\ninterface IsimetricAttrValue {\n  va: Array<string>;\n  ctx: IGtplObject;\n}\n\ntype simetricAttrValueSet = Set<IsimetricAttrValue>;\n\nconst simetricAttr: WeakMap<Node, simetricAttrValueSet> = new WeakMap();\n\nfunction initChangeEvents() {\n  if (globalCache.binitChangeEvents) {\n    return;\n  }\n  try {\n    globalCache.binitChangeEvents = true;\n    const changeEvent = function (event: any) {\n      const ele: any = event.target;\n      if (simetricAttr.has(ele)) {\n        const temp = simetricAttr.get(ele);\n        if (temp) {\n          for (let obj of temp) {\n            //console.log('event', event, obj, ele);\n            updateVar(obj.va, obj.ctx, ele.value);\n          }\n        }\n      }\n    };\n    if (globalObject.addEventListener) {\n      globalObject.addEventListener(\"input\", changeEvent);\n      globalObject.addEventListener(\"change\", changeEvent);\n    }\n  } catch (ex: any) {\n    STACK(ex.message);\n  }\n}\n\n//---\n\nfunction addCheckRenderElement(gtpl: IGtplObject, bind: IBindObject) {\n  const re: Set<IBindObject> = privateProperties.getProperty(\n    gtpl,\n    \"renderElements\"\n  );\n  if (!re.has(bind)) {\n    re.add(bind);\n  }\n}\n\nfunction checkRenderElements(gtpl: IGtplObject, originalbind: IBindObject) {\n  const re: Set<IBindObject> = privateProperties.getProperty(\n    gtpl,\n    \"renderElements\"\n  );\n  if (!re.has(originalbind)) {\n    return;\n  }\n  const arr = Array.isArray(gtpl.Elements) ? gtpl.Elements : [gtpl.Elements];\n  arr.forEach((ele: Node, index: number) => {\n    const bind: IBindObject = gtpl.RenderElements[index];\n    if (bind && re.has(bind)) {\n      let allok = true;\n      if (bind.ele) {\n        const element = Array.isArray(bind.ele) ? bind.ele[0] : bind.ele;\n        if (!bind.mark.parentNode && !element.parentNode) {\n          allok = false;\n        } else if (bind.mark.parentNode && !element.parentNode) {\n          show(bind);\n          if (bind.eles) {\n            (<any>bind.eles)[0].refresh();\n            if ((<any>bind.eles)[0].refCase)\n              show((<any>bind.eles)[0].refCase);\n          }\n        }\n      } else if (bind.eles) {\n        if (bind.mark.parentNode) {\n          let marca: Node | null = null;\n          const render_arr: any = [];\n          bind.eles.forEach((gtpl: IGtplObject) => {\n            const temp: any = [];\n            gtpl.refresh();\n            gtpl.addTo(temp);\n            temp.forEach((ele: Node) => {\n              if (!ele.parentNode) {\n                render_arr.push(ele);\n              } else if (!marca) {\n                marca = ele;\n              }\n            });\n          });\n          if (render_arr.length) {\n            show(\n              {\n                type: bind.type,\n                link: bind.link,\n                ele: render_arr,\n                mark: marca ? marca : bind.mark,\n              },\n              false\n            );\n          }\n        } else {\n          allok = false;\n        }\n      }\n      if (allok) {\n        re.delete(bind);\n      }\n    }\n  });\n}\n\n//---\n\nfunction updateVar(\n  va: Array<string>,\n  ctx: IGtplObject,\n  value: any,\n  force: boolean = false\n) {\n  //console.log('updateVar', va, value, force);\n  if (va.length > 1) {\n    const reduce: any = (obj: any, index: number, fin: number) => {\n      if (index == fin) return obj[va[index]];\n      return reduce(obj[va[index]], ++index, fin);\n    };\n    const ret = reduce(ctx.Root, 0, va.length - 2);\n    const fin = va[va.length - 1];\n    if (force || ret[fin] != value) {\n      ret[fin] = value;\n    }\n  } else {\n    const fin = va[0];\n    if (force || ctx.Root[fin] != value) {\n      ctx.Root[fin] = value;\n    }\n  }\n}\n\nfunction reduceVar(\n  gtpl: IGtplObject,\n  name: string[],\n  val?: any,\n  index?: number,\n  limit?: number\n): any {\n  if (index == undefined) index = 0;\n  if (limit !== undefined && index >= name.length - limit) return val;\n  const result = val == undefined ? gtpl.getValue(name[index++]) : val[name[index++]];\n  if (limit !== undefined && index >= name.length - limit) return result;\n  if (index >= name.length) return result;\n  return reduceVar(gtpl, name, result, index);\n}\n\nasync function reduceFnc(\n  gtpl: IGtplObject,\n  functions: IFunction[],\n  index?: number,\n  initval?: any\n): Promise<any> {\n  if (index == undefined) index = 0;\n  const func = functions[index++];\n  const ctx = gtpl.getContext(func.name[0]);\n  const fnc: Function = reduceVar(ctx, func.name);\n  const arrval: any[] = [];\n  if (func.params) {\n    func.params.forEach((param: IVarOrConst) => {\n      if (param.ct != undefined) arrval.push(param.ct);\n      else if (param.va != undefined) arrval.push(reduceVar(gtpl, param.va));\n    });\n  }\n  if (initval != undefined) arrval.push(initval);\n  try {\n    initval = await fnc.apply(ctx.Root, arrval);\n  } catch (ex: any) {\n    STACK(ex.message, fnc);\n    initval = undefined;\n  }\n  if (index >= functions.length) return initval;\n  return await reduceFnc(gtpl, functions, index, initval);\n}\n\n//---\n\nasync function calculateBind(me: IGtplObject, bind: IBindObject, value?: any, extraarguments?: any) {\n  let result: any = undefined;\n  const gtpl = bind.gtpl ? bind.gtpl : me;\n  if (bind.link.formula && bind.link.formula.fnc) {\n    const fnc: Function = bind.link.formula.fnc;\n    const arrval: any[] = [];\n    if (bind.link.formula.vars) {\n      const vars: TplVar[] = bind.link.formula.vars;\n      vars.forEach((key) => {\n        arrval.push(gtpl.getValue(key[0]));\n      });\n    }\n    if (extraarguments) {\n      arrval.push(extraarguments);\n    }\n    try {\n      //console.log(fnc, gtpl.Root, arrval);\n      result = await fnc.apply(gtpl.Root, arrval);\n    } catch (ex: any) {\n      STACK(ex.message, fnc);\n      result = undefined;\n    }\n  } else {\n    if (bind.link.vorc) {\n      if (bind.link.vorc.va != undefined)\n        result = value != undefined ? value : reduceVar(gtpl, bind.link.vorc.va);\n      if (bind.link.vorc.ct != undefined) result = bind.link.vorc.ct;\n    }\n    if (bind.link.functions) {\n      result = await reduceFnc(gtpl, bind.link.functions, 0, result);\n    }\n  }\n  return result;\n}\n\n//---\n\nfunction getContext(gtpl: IGtplObject, bind: IBindObject) {\n  let ctx: IGtplObject = gtpl;\n  if (bind.link.vorc && bind.link.vorc.va) {\n    ctx = gtpl.getContext(bind.link.vorc.va[0]);\n  } else if (bind.link.functions) {\n    const fnc: IFunction = bind.link.functions[0];\n    ctx = gtpl.getContext(fnc.name[0]);\n  }\n  return ctx;\n}\n\n//---\n\nfunction createGetterAndSetter(\n  gtpl: IGtplObject,\n  va: TplVar,\n  bind: IBindObject\n) {\n  const key = va[0];\n  const ref = gtpl.BindTree[key];\n  if (ref != undefined) {\n    return;\n  }\n  const defaultvalue = gtpl.getValue(key);\n  const objdef: IBindDef = {\n    key: key,\n    val: defaultvalue, // target\n    pro: undefined, // proxy\n  };\n  gtpl.BindDef.add(objdef);\n  try {\n    if (!gtpl.Root.hasOwnProperty(key))\n      gtpl.Root[key] = null;\n    Object.defineProperty(gtpl.Root, key, {\n      get: function () {\n        if (objdef.pro !== undefined) return objdef.pro;\n        if (isStaticType(objdef.val)) return objdef.val;\n        while (objdef.val[ISPROXY]) objdef.val = objdef.val[PROXYTARGET];\n        objdef.pro = GProxy(objdef.val, gtpl.eventPRoxy.bind(gtpl), objdef, [\n          objdef.key,\n        ]);\n        return objdef.pro;\n      },\n      set: function (newval: any) {\n        objdef.val = newval;\n        if (isStaticType(newval)) {\n          delete objdef.pro;\n          gtpl.eventPRoxy(\n            TypeEventProxyHandler.SET,\n            [objdef.key],\n            newval,\n            objdef\n          );\n          return objdef.val;\n        } else {\n          while (objdef.val[ISPROXY]) objdef.val = objdef.val[PROXYTARGET];\n          objdef.pro = GProxy(\n            objdef.val,\n            gtpl.eventPRoxy.bind(gtpl),\n            objdef,\n            [objdef.key]\n          );\n          gtpl.eventPRoxy(\n            TypeEventProxyHandler.SET,\n            [objdef.key],\n            newval,\n            objdef\n          );\n          return objdef.pro;\n        }\n      },\n    });\n  } catch (ex) {\n    STACK((<any>ex).message, key, gtpl.Root);\n  }\n}\n\nfunction addBind2Object(gtpl: IGtplObject, va: TplVar, bind: IBindObject) {\n  let ref: any = gtpl.BindTree;\n  for (let i = 0, n = va.length; i < n; i++) {\n    const name = va[i];\n    if (i == 0) {\n      const ctx = gtpl.getContext(name);\n      createGetterAndSetter(ctx, va, bind);\n      if (ctx != gtpl) {\n        // si se añade el bind a otro contexto, hay que almacenar el contexto original\n        bind.gtpl = gtpl;\n        // almacenamos en el contexto original una referencia al contexto donde se almacena el bind\n        if (!gtpl.BindMap) gtpl.BindMap = new Map();\n        gtpl.BindMap.set(bind, ctx);\n        addBind2Object(ctx, va, bind);\n        return;\n      }\n    }\n    if (ref[name] == undefined)\n      ref[name] = {};\n    if (i < n - 1) {\n      ref = ref[name];\n      if (ref.tree == undefined) ref.tree = {};\n      ref = ref.tree;\n    } else {\n      ref = ref[name];\n    }\n  }\n  if (ref.me == undefined) {\n    ref.me = new Set();\n  }\n  ref.me.add(bind);\n}\n\nfunction getBind2Object(\n  gtpl: IGtplObject,\n  va: TplVar,\n  bind: IBindObject\n): Set<IBindObject> {\n  /*\n    if (bind.gtpl && bind.gtpl != gtpl) {\n        console.error('getBind2Object', 2);\n        const original_gtpl = bind.gtpl;\n        delete bind.gtpl;\n        return getBind2Object(original_gtpl, va, bind);\n    }\n    */\n  /*\n     if (gtpl.BindMap && gtpl.BindMap.has(bind)) {\n         console.error('getBind2Object', 1);\n         const ctx_gtpl = gtpl.BindMap.get(bind);\n         if (ctx_gtpl && ctx_gtpl != gtpl) {\n             gtpl.BindMap.delete(bind);\n             return getBind2Object(ctx_gtpl, va, bind);\n         }\n     }\n     */\n  let ref: any = gtpl.BindTree;\n  for (let i = 0, n = va.length; i < n; i++) {\n    const name = va[i];\n    if (i < n - 1) {\n      ref = ref[name];\n      ref = ref.tree;\n    } else {\n      ref = ref[name];\n    }\n  }\n  return ref.me;\n}\n\nfunction delBind(gtpl: IGtplObject, bind: IBindObject) {\n  if (bind.link.vorc && bind.link.vorc.va) {\n    getBind2Object(gtpl, bind.link.vorc.va, bind).delete(bind);\n  }\n  if (bind.link.formula?.vars) {\n    bind.link.formula.vars.forEach((va) => {\n      getBind2Object(gtpl, va, bind).delete(bind);\n    });\n  }\n}\n\nfunction searchBind(gtpl: IGtplObject, bind: IBindObject): boolean {\n  let encontrado = false;\n  if (bind.link.vorc && bind.link.vorc.va) {\n    if (getBind2Object(gtpl, bind.link.vorc.va, bind).has(bind))\n      encontrado = true;\n  }\n  if (bind.link.formula?.vars) {\n    bind.link.formula.vars.forEach((va) => {\n      if (getBind2Object(gtpl, va, bind).has(bind)) encontrado = true;\n    });\n  }\n  if (!encontrado) {\n    const re: Set<IBindObject> = privateProperties.getProperty(\n      gtpl,\n      \"renderElements\"\n    );\n    if (re.has(bind)) re.delete(bind);\n  }\n  return encontrado;\n}\n\n//---\n\nfunction checkBindVar(gtpl: IGtplObject, bind: IBindObject): boolean {\n  if (bind.type == BindTypes.VAR) {\n    //log('checkBindVar', gtpl, bind);\n    if (bind.link.svar && bind.link.vorc && bind.link.vorc.va) {\n      const temp = bind.link.vorc.va.join(\"\");\n      if (temp == \"this\") {\n        bind.ele[bind.link.svar] = gtpl.Root;\n      } else {\n        bind.ele[bind.link.svar] = reduceVar(gtpl, bind.link.vorc.va);\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction checkBindEvent(gtpl: IGtplObject, bind: IBindObject): boolean {\n  if (bind.type == BindTypes.EVENT && bind.prop) {\n    //log('checkBindEvent', gtpl, bind);\n    const ctx: IGtplObject = getContext(gtpl, bind);\n    const obj = { gtpl: ctx, bind: bind };\n    const options: any = { passive: false };\n    if (\n      [\"wheel\", \"mousewheel\", \"touchstart\", \"touchmove\"].indexOf(\n        bind.prop.toLowerCase()\n      ) >= 0\n    )\n      options.passive = true;\n    bind.ele.addEventListener(\n      bind.prop,\n      async function (event: any) {\n        const result = await calculateBind(obj.gtpl, obj.bind, undefined, event);\n        if (typeof result == \"function\") {\n          if (obj.bind.link.params) {\n            const arrval: any = [];\n            obj.bind.link.params.forEach((param) => {\n              if (param.ct != undefined) arrval.push(param.ct);\n              else if (param.va != undefined)\n                arrval.push(reduceVar(gtpl, param.va));\n            });\n            result.apply(obj.gtpl.Root, [event, ...arrval]);\n          } else {\n            result.apply(obj.gtpl.Root, [event]);\n          }\n        } else {\n          if (event.preventDefault)\n            event.preventDefault();\n        }\n      },\n      passiveSupported ? options : false\n    );\n    return true;\n  }\n  return false;\n}\n\nfunction checkBindFormula(gtpl: IGtplObject, bind: IBindObject): boolean {\n  let result = false;\n  if (bind.link.formula && bind.link.formula.vars && bind.link.formula.vars.length) {\n    result = true;\n    bind.link.formula.vars.forEach((va) => {\n      addBind2Object(gtpl, va, bind);\n    });\n  }\n  return result;\n}\n\nfunction checkSimetricBind(gtpl: IGtplObject, bind: IBindObject) {\n  if (\n    bind.type == BindTypes.ATTR &&\n    bind.prop &&\n    bind.link &&\n    bind.link.vorc &&\n    bind.link.vorc.va\n  ) {\n    const { prop } = bind;\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      //---\n      initChangeEvents();\n      //---\n      bind.simetric = true;\n      bind.prop = prop.slice(1, - 1);\n      //---\n      const va = bind.link.vorc.va;\n      const ctx: any = gtpl.getContext(va[0]);\n      //---\n      if (bind.prop == \"value\") {\n        if (!simetricAttr.has(bind.ele)) simetricAttr.set(bind.ele, new Set());\n        simetricAttr.get(bind.ele)?.add({\n          va: va,\n          ctx: ctx,\n        });\n      }\n      //---\n      if (bind.prop in bind.ele.constructor.prototype) {\n        const original: any = Object.getOwnPropertyDescriptor(\n          bind.ele.constructor.prototype,\n          bind.prop\n        );\n        if (original) {\n          Object.defineProperty(bind.ele, bind.prop, {\n            get: function () {\n              //console.log('get', bind, this, original.get.call(this));\n              return original.get.call(this);\n            },\n            set: function (value) {\n              //console.log('set', bind, this, value);\n              if (\n                bind.prop == \"value\" &&\n                bind.ele.nodeName.toLowerCase() == \"select\"\n              ) {\n                const ret = original.set.call(this, value);\n                if (original.get.call(this) == value)\n                  updateVar(va, ctx, value);\n                else log(\"select value not valid\", value + ' not in options');\n                return ret;\n              } else {\n                updateVar(va, ctx, value);\n                return original.set.call(this, value);\n              }\n            },\n          });\n        } else {\n          log(\n            \"simetric attr error\",\n            bind.prop,\n            \" not in \",\n            bind.ele.constructor.prototype\n          );\n        }\n      } else {\n        log(\"simetric attr error\", bind.prop, \" in \", bind.ele);\n      }\n      //---\n    }\n  }\n}\n\nfunction checkBind(gtpl: IGtplObject, bind: IBindObject): boolean {\n  let result = false;\n  if (bind.link.vorc && bind.link.vorc.va) {\n    result = true;\n    checkSimetricBind(gtpl, bind);\n    addBind2Object(gtpl, bind.link.vorc.va, bind);\n  }\n  if (bind.link.functions) {\n    bind.link.functions.forEach((fnc: IFunction) => {\n      if (fnc.params) {\n        fnc.params.forEach((param: IVarOrConst) => {\n          if (param.va) {\n            result = true;\n            addBind2Object(gtpl, param.va, bind);\n          }\n        });\n      }\n    });\n  }\n  return result;\n}\n\n//---\n\nfunction removeElements(elements: any) {\n  if (Array.isArray(elements)) {\n    elements.forEach((element) => {\n      if (element.destroy)\n        element.destroy(true);\n      else removeElements(element);\n    });\n  } else {\n    if (elements.destroy)\n      elements.destroy(true);\n    else elements.parentNode?.removeChild(elements);\n  }\n}\n\n//---\n\nfunction iterBind(\n  btree: any,\n  type: TypeEventProxyHandler,\n  path: string[],\n  value?: any,\n  arr: any = []\n) {\n  if (btree) {\n    if (btree.me)\n      btree.me.forEach((bind: IBindObject) => {\n        arr.push([type, bind, path, !path.length ? value : undefined]);\n      });\n    if (btree.tree) {\n      const base = Array.isArray(path) ? path.shift() : undefined;\n      for (let i in btree.tree) {\n        if (base == undefined || base == i) {\n          iterBind(\n            btree.tree[i],\n            type,\n            path,\n            value != undefined ? (base == undefined ? value[i] : value) : undefined,\n            arr\n          );\n        }\n      }\n    }\n  }\n  return arr;\n}\n\n//---\n\nfunction checkMarkEle(gtpl: IGtplObject, bind: IBindObject, bresult: boolean) {\n  // si hay varios tipos de bindados a un mismo elemento, if + switch por ejemplo\n  // hay que hacer que solo se genere en una ocasión, y el otro coja los elementos\n  // generados por el que primero llegue.\n  if (bresult) {\n    const MarkEle = privateProperties.getProperty(gtpl, \"MarkEle\");\n    const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n    if (!bind.ele) {\n      if (bind.mark) {\n        if (bind.gen) {\n          if (MarkEle.has(bind.mark)) {\n            bind.ele = MarkEle.get(bind.mark);\n          } else {\n            bind.ele = (<Function>bind.gen)(bind.gtpl ? bind.gtpl : gtpl);\n            MarkEle.set(bind.mark, bind.ele);\n          }\n          delete bind.gen;\n        } else {\n          if (MarkEle.has(bind.mark)) {\n            bind.ele = MarkEle.get(bind.mark);\n            memValues.delete(bind);\n          }\n        }\n      }\n    } else if (MarkEle.has(bind.mark)) {\n      if (bind.ele != MarkEle.get(bind.mark)) {\n        bind.ele = MarkEle.get(bind.mark);\n        memValues.delete(bind);\n      }\n    }\n  }\n}\n\nfunction checkMarkRender(bind: IBindObject) {\n  let allok = true;\n  if (bind.mark.checks) {\n    for (let i in bind.mark.checks) {\n      if (!bind.mark.checks[i]) {\n        allok = false;\n        break;\n      }\n    }\n  }\n  return allok;\n}\n\n/*\nfunction checkValSelect(parentElement: HTMLElement, childElement: HTMLElement) {\n    try {\n        if (parentElement.nodeName && parentElement.nodeName.toLowerCase() == 'select' &&\n            childElement.nodeName && childElement.nodeName.toLowerCase() == 'option') {\n            console.log('checkValSelect', parentElement, childElement);\n            if ((parentElement as HTMLSelectElement).value !== '' &&\n                (parentElement as HTMLSelectElement).value === (childElement as HTMLOptionElement).value) {\n                (childElement as HTMLOptionElement).selected = true;\n            }\n        }\n    } catch (ex) { console.error(ex); }\n}\n*/\n\nfunction show(bind: IBindObject, remove: boolean = true) {\n  if (bind.ele) {\n    if (Array.isArray(bind.ele)) {\n      bind.ele.forEach((ele) => {\n        bind.mark.parentNode.insertBefore(ele, bind.mark);\n        //checkValSelect(bind.mark.parentNode, ele);\n      });\n    } else {\n      bind.mark.parentNode.insertBefore(bind.ele, bind.mark);\n      //checkValSelect(bind.mark.parentNode, bind.ele);\n    }\n    if (remove) bind.mark.remove();\n  }\n}\n\nfunction hide(bind: IBindObject, insert: boolean = true) {\n  if (bind.ele) {\n    if (Array.isArray(bind.ele)) {\n      if (insert) bind.ele[0].parentNode.insertBefore(bind.mark, bind.ele[0]);\n      bind.ele.forEach((ele) => {\n        ele.remove();\n      });\n    } else {\n      if (insert) bind.ele.parentNode.insertBefore(bind.mark, bind.ele);\n      bind.ele.remove();\n    }\n  }\n}\n\nfunction renderBind(gtpl: IGtplObject, bind: IBindObject, render: boolean) {\n  const index = getElementIndex(gtpl, bind);\n  const canrender = checkMarkRender(bind);\n  if (render && canrender) {\n    if (index >= 0) gtpl.RenderElements[index] = bind;\n    if (bind.mark.parentNode) show(bind);\n    else if (index >= 0 && searchBind(gtpl, bind))\n      addCheckRenderElement(gtpl, bind);\n  } else {\n    if (index >= 0) delete gtpl.RenderElements[index];\n    if (bind.ele.parentNode) hide(bind);\n    else if (index >= 0 && searchBind(gtpl, bind))\n      addCheckRenderElement(gtpl, bind);\n  }\n  if (render && !canrender) return false;\n  return true;\n}\n\nfunction getElementIndex(gtpl: IGtplObject, bind: IBindObject) {\n  // si la marca se encuentra en el array de elementos, quiere decir que su padre\n  // es el padre de la marca, si va ser un elemento del dom puede existir posibilidad\n  // de que el parentelement de la marca aún no exista, en ese caso, tenemos el array\n  // renderelements donde pondremos los elementos a renderizar en el mismo nivel que su marca\n  const index = gtpl.Elements.indexOf(bind.mark);\n  if (index >= 0) {\n    if (!gtpl.RenderElements) {\n      //gtpl.RenderElements = Array(gtpl.Elements.length).fill(null);\n      gtpl.RenderElements = {};\n    }\n  }\n  return index;\n}\n\nfunction createGTpl(\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  objindex?: IIndex,\n  elementos?: IGtplObject[],\n  row?: any,\n  refresh?: boolean /*, objparent: any*/\n) {\n  const options: any = {\n    parent: bind.gtpl ? bind.gtpl : gtpl,\n    generator: bind.gen,\n  };\n  if (objindex && elementos && row) {\n    const obj: any = {};\n    obj[objindex.index] = elementos.length;\n    obj[objindex.target] = row;\n    //obj[SPARENT] = objparent;\n    options.context = [objindex.index, objindex.target];\n    options.root = obj;\n  }\n  if (refresh !== undefined) {\n    options.refresh = refresh;\n  }\n  return new GTpl(options);\n}\n\n//---\n\nasync function updateTEXTbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //log('TEXT', bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n  if (result !== undefined && result !== null) {\n    if (memValues.has(bind) && memValues.get(bind) == result) {\n      return gtpl;\n    }\n    memValues.set(bind, result);\n  }\n  //---\n  bind.ele.textContent = result;\n  //---\n  return gtpl;\n}\n\nasync function updateATTRbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  gtpl = getContext(gtpl, bind);\n  const updateProperty = (prop: string, value: any) => {\n    if (bind.ele[prop] !== undefined && bind.ele[prop] !== null) {\n      if (value === undefined || value === null) {\n        if (bind.ele[prop] !== \"\")\n          bind.ele[prop] = null;\n      } else if (bind.ele[prop] != value) {\n        try {\n          bind.ele[prop] = value;\n        } catch (ex) {\n          STACK((<any>ex).message, bind.ele, prop);\n        }\n      }\n    } else {\n      if (value === undefined || value === null) {\n        bind.ele.removeAttribute(prop);\n      } else if (bind.ele.getAttribute(prop) != value) {\n        bind.ele.setAttribute(prop, value);\n      }\n    }\n  };\n  if (bind.prop) {\n    updateProperty(bind.prop, result);\n  } else {\n    if (result === undefined || result === null) {\n      if (bind.attrs) {\n        bind.attrs.forEach((key) => {\n          updateProperty(key, null);\n        });\n        delete bind.attrs;\n      }\n    } else {\n      if (!bind.attrs)\n        bind.attrs = [];\n      const missing = bind.attrs.filter(key => !(key in result));\n      missing.forEach((key) => {\n        updateProperty(key, null);\n      });\n      bind.attrs.length = 0;\n      for (let key in result) {\n        bind.attrs.push(key);\n        updateProperty(key, result[key]);\n      }\n    }\n  }\n  return gtpl;\n}\n\nasync function updateINNERbind(type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  gtpl = getContext(gtpl, bind);\n  if (result !== undefined && bind.ele.innerHTML != result)\n    bind.ele.innerHTML = result;\n  return gtpl;\n}\n\nasync function updateSTYLEbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //log('STYLE', bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n  if (memValues.has(bind) && memValues.get(bind) == result) return gtpl;\n  memValues.set(bind, result);\n  //---\n  if (bind.prop) {\n    bind.ele.style[bind.prop] = result;\n  }\n  //---\n  return gtpl;\n}\n\nasync function updateIFbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //log('IF/NOTIF', bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  const bresult = bind.type == BindTypes.NOTIF ? !result : !!result;\n  //---\n  if (!bind.mark.checks) bind.mark.checks = {};\n  bind.mark.checks[bind.type] = bresult;\n  //---\n  checkMarkEle(gtpl, bind, bresult);\n  //---\n  if (!bind.ele) {\n    return gtpl;\n  }\n  //---\n  const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n  if (memValues.has(bind) && memValues.get(bind) === bresult) return gtpl;\n  //---\n  if (renderBind(gtpl, bind, bresult)) memValues.set(bind, bresult);\n  //---\n  return gtpl;\n}\n\nasync function updateFORbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //console.log('FOR', type, bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  //if (!searchBind(gtpl, bind)) {\n  //    return;\n  //}\n  //---\n  if (!bind.eles) bind.eles = [];\n  //---\n  const elementos = bind.eles;\n  const objindex: IIndex = <IIndex>bind.link.index;\n  //---\n  const render_arr: any = [];\n  const delete_arr: any = [];\n  //---\n  const index: any = (Array.isArray(path) && path.length) ? path[0] : undefined;\n  //---\n  if (!isNaN(index)) {\n    const ppath: any = path;\n    if (type == TypeEventProxyHandler.SET) {\n      let update = false;\n      if (ppath.length > 1) {\n        update = true;\n      } else if (ppath.length == 1 && elementos.length == result.length) {\n        const newgtpl = elementos[index];\n        newgtpl.Root[objindex.target] = result[index];\n        return gtpl;\n      }\n      if (update) {\n        const newgtpl = elementos[index];\n        ppath.shift();\n        updateVar(\n          ppath,\n          <any>{ Root: newgtpl.Root[objindex.target] },\n          reduceVar(gtpl, ppath, result[index]),\n          true\n        );\n      } else {\n        const newgtpl = createGTpl(\n          gtpl,\n          bind,\n          objindex,\n          elementos,\n          result[index],\n          false\n        );\n        elementos.push(newgtpl);\n        render_arr.push([newgtpl, index]);\n      }\n    }\n    if (type == TypeEventProxyHandler.UNSET) {\n      if (ppath.length > 1) {\n        const newgtpl = elementos[index];\n        newgtpl.Root[objindex.target] = result[index];\n      } else {\n        const newgtpl: IGtplObject = elementos.splice(index, 1)[0];\n        delete_arr.push([newgtpl, index]);\n      }\n    }\n  } else if (result && result.length) {\n    if (index == 'length' && elementos.length == result.length)\n      return gtpl;\n    result.forEach((row: any, index: number) => {\n      if (index >= elementos.length) {\n        const newgtpl = createGTpl(\n          gtpl,\n          bind,\n          objindex,\n          elementos,\n          row,\n          false /*, result*/\n        );\n        elementos.push(newgtpl);\n        render_arr.push([newgtpl, index]);\n      } else {\n        const obj: any = elementos[index].Root;\n        obj[objindex.target] = row;\n      }\n    });\n    if (elementos.length > result.length) {\n      const gtpls = elementos.splice(\n        result.length,\n        elementos.length - result.length\n      );\n      gtpls.forEach((newgtpl, index: number) => {\n        delete_arr.push([newgtpl, index]);\n      });\n    }\n  } else if (elementos.length) {\n    elementos.forEach((newgtpl, index: number) => {\n      delete_arr.push([newgtpl, index]);\n    });\n    elementos.length = 0;\n  }\n  //---\n  if (delete_arr.length) {\n    delete_arr.forEach((rowinfo: any) => {\n      const [newgtpl, index] = rowinfo;\n      newgtpl.destroy();\n      gtpl.GtplChilds.delete(newgtpl);\n    });\n  }\n  //---\n  if (render_arr.length) {\n    //---\n    const renderindex = getElementIndex(gtpl, bind);\n    if (renderindex >= 0) {\n      if (!gtpl.RenderElements[renderindex]) {\n        gtpl.RenderElements[renderindex] = bind;\n      }\n    }\n    //---\n    const all: any = [];\n    render_arr.forEach((rowinfo: any) => {\n      const [newgtpl, index] = rowinfo;\n      newgtpl.addTo(all);\n      gtpl.GtplChilds.add(newgtpl);\n    });\n    //---\n    if (bind.mark.parentNode) {\n      //---\n      show(\n        {\n          type: bind.type,\n          link: bind.link,\n          ele: all,\n          mark: bind.mark,\n        },\n        false\n      );\n      //---\n      render_arr.forEach((rowinfo: any) => {\n        rowinfo[0].refresh();\n      });\n      //---\n    } else if (renderindex >= 0 && searchBind(gtpl, bind)) {\n      addCheckRenderElement(gtpl, bind);\n    }\n    //---\n  }\n  //---\n  return gtpl;\n}\n\nasync function updateSWITCHbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //log('SWITCH', bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  const bresult = result !== undefined && result !== null ? true : false;\n  //---\n  if (!bind.mark.checks) bind.mark.checks = {};\n  bind.mark.checks[bind.type] = bresult;\n  //---\n  checkMarkEle(gtpl, bind, bresult);\n  //---\n  if (!bind.mark.checks) bind.mark.checks = {};\n  bind.mark.checks[bind.type] = result == undefined ? false : true;\n  //---\n  if (!bind.ele) {\n    return gtpl;\n  }\n  //---\n  const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n  if (memValues.has(bind) && memValues.get(bind) === result) {\n    return gtpl;\n  }\n  memValues.set(bind, result);\n  //---\n  if (bind.case && bind.case.length) {\n    //---\n    if (bind.eles && bind.eles.length) {\n      bind.eles.forEach((gtplcase: IGtplObject) => {\n        hide((<any>gtplcase).refCase);\n        gtplcase.destroy();\n        gtpl.GtplChilds.delete(gtplcase);\n      });\n      delete bind.eles;\n    }\n    //---\n    if (!searchBind(gtpl, bind)) {\n      return gtpl;\n    }\n    //---\n    if (bresult) {\n      //---\n      if (!bind.case[0].mark) {\n        //---\n        const mcobj: any = {};\n        //---\n        for (let i = 0, n = bind.ele.childNodes.length; i < n; i++) {\n          const node = bind.ele.childNodes[i];\n          if (node.nodeType === 8) {\n            if (node.textContent.length == 6) {\n              mcobj[node.textContent] = node;\n            }\n          }\n        }\n        //---\n        for (let i = 0, n = bind.case.length; i < n; i++) {\n          const ca = bind.case[i];\n          if (!ca.mark && ca.uid) {\n            ca.mark = mcobj[ca.uid];\n          }\n        }\n        //---\n      }\n      //---\n      for (let i = 0, n = bind.case.length; i < n; i++) {\n        const ca = bind.case[i];\n        const valca = await calculateBind(gtpl, ca);\n        if (valca == result) {\n          const gtplcase = createGTpl(\n            gtpl,\n            ca,\n            undefined,\n            undefined,\n            undefined,\n            false\n          );\n          ca.ele = gtplcase.Elements;\n          ca.eles = [gtplcase];\n          (<any>gtplcase).refCase = ca;\n          gtpl.GtplChilds.add(gtplcase);\n          //console.error('GtplChilds', gtpl.GtplChilds.size);\n          bind.eles = ca.eles;\n          break;\n        }\n      }\n      //---\n    }\n    //---\n  }\n  //---\n  if (renderBind(gtpl, bind, bresult)) {\n    if (bresult) {\n      (<any>bind.eles)[0].refresh();\n      show((<any>bind.eles)[0].refCase);\n    }\n  }\n  //---\n  return gtpl;\n}\n\nasync function updateISbind(\n  type: TypeEventProxyHandler,\n  gtpl: IGtplObject,\n  bind: IBindObject,\n  result?: any,\n  path?: string[]\n) {\n  //log('IS', bind, result, path);\n  //---\n  gtpl = getContext(gtpl, bind);\n  //---\n  const bresult = result !== undefined && result !== null ? true : false;\n  //---\n  const memValues = privateProperties.getProperty(gtpl, \"memValues\");\n  if (memValues.has(bind) && memValues.get(bind) == result) return gtpl;\n  memValues.set(bind, result);\n  //---\n  let check = false;\n  if (bind.eles) {\n    check = true;\n    bind.eles[0].destroy();\n    gtpl.GtplChilds.delete(bind.eles[0]);\n    delete bind.eles;\n  } else if (bind.ele) {\n    hide(bind);\n  }\n  //---\n  if (!bresult) return gtpl;\n  //---\n  if (check && !searchBind(gtpl, bind)) {\n    return gtpl;\n  }\n  //---\n  if (Array.isArray(result) || typeof result == \"function\") {\n    const newgtpl = createGTpl(gtpl, {\n      link: bind.link,\n      type: bind.type,\n      gtpl: bind.gtpl,\n      gen: result,\n    });\n    bind.eles = [newgtpl];\n    gtpl.GtplChilds.add(newgtpl);\n    bind.ele = newgtpl.Elements;\n  } else {\n    bind.ele = result;\n  }\n  //---\n  privateProperties.getProperty(gtpl, \"MarkEle\").set(bind.mark, bind.ele);\n  //---\n  renderBind(gtpl, bind, bresult);\n  //---\n  return gtpl;\n}\n\n//---\n\nexport class GTpl implements IGtplObject {\n  ID!: string;\n\n  /**\n   * Referencia a la función generadora.\n   */\n  FncElements!: Function | Array<any>;\n\n  /**\n   * Array de array de elementos html que forman la plantilla\n   */\n  Elements!: Node[];\n\n  /**\n   * Objeto indexado a los elementos dinamicos de ka plantillas, for, switch etc...\n   */\n  RenderElements!: any;\n\n  /**\n   * Es el arbol de objetos bindados siguiendo la misma ramificación que en el arbol html.\n   */\n  BindTree!: any;\n\n  /**\n   * Son los objetos bindados con constantes, no dinámicos.\n   */\n  BindConst!: Set<IBindObject>;\n\n  /**\n   * Mapa de objetos bindados a plantillas diferentes a la original.\n   * Por ejemplo: cuando se tiene una plantilla dentro de otra plantilla.\n   */\n  BindMap!: Map<IBindObject, IGtplObject>;\n\n  /**\n   * Son las claves de primer nivel de objetos bindados a la plantilla.\n   */\n  BindDef!: Set<IBindDef>;\n\n  /**\n   * Plantillas hijas.\n   */\n  GtplChilds!: Set<IGtplObject>;\n\n  /**\n   * Plantilla padre.\n   */\n  Parent!: IGtplObject;\n\n  /**\n   * Utilizado para localizar el contexto de la variable que se solicita.\n   */\n  Context!: Set<String>;\n\n  /**\n   * Objeto referencia para aplicar a la plantilla.\n   */\n  Root: any;\n\n  constructor(options?: any) {\n    //log('constructor', this, options);\n    this.ID = Math.random().toString(16).slice(2);\n    this.BindTree = {};\n    this.BindConst = new Set();\n    this.BindDef = new Set();\n    this.GtplChilds = new Set();\n    this.loadOptions(options);\n  }\n\n  loadOptions(options?: any) {\n    if (options) {\n      this.Root = options.root;\n      if (options.parent) this.Parent = options.parent;\n      if (options.context) this.Context = new Set(options.context);\n      if (options.generator) {\n        this.FncElements = options.generator;\n        this.Elements = [];\n        GAddToo(this.Elements, this.FncElements, this);\n      }\n      privateProperties.setProperty(this, \"GenerationFinish\", true);\n      if (options.refresh === undefined || options.refresh === true)\n        this.refresh();\n    }\n  }\n\n  getValue(key: any): any {\n    const ref = this.Root;\n    if (ref) {\n      if (ref.hasOwnProperty(key)) return ref[key];\n      if (ref[key] !== undefined) return ref[key];\n    }\n    if (this.Parent) return this.Parent.getValue(key);\n    return undefined;\n  }\n\n  getGtplRoot(): GTpl {\n    if (this.Parent) return this.Parent.getGtplRoot();\n    return this;\n  }\n\n  getRoot(): any {\n    if (this.Parent) return this.Parent.getRoot();\n    return this.Root;\n  }\n\n  getContext(key: string): GTpl {\n    if (this.Context && this.Context.has(key)) return this;\n    if (this.Parent) return this.Parent.getContext(key);\n    return this.getGtplRoot();\n  }\n\n  addBind(bind: IBindObject) {\n    //log('addBind', this, bind);\n    if (!checkBindVar(this, bind))\n      if (!checkBindEvent(this, bind))\n        if (!checkBindFormula(this, bind))\n          if (!checkBind(this, bind))\n            this.BindConst.add(bind);\n    if (privateProperties.getProperty(this, \"GenerationFinish\")) {\n      this.launchChange(TypeEventProxyHandler.UKNOW3, bind);\n    }\n  }\n\n  destroy(elements = true) {\n    //---\n    const num = Array.isArray(this.Elements) ? this.Elements.length : 1;\n    //---\n    this.GtplChilds.forEach((gtpl) => {\n      gtpl.destroy(false);\n    });\n    //---\n    if (this.BindMap) {\n      for (let [bind, gtpl] of this.BindMap) {\n        delBind(gtpl, bind);\n      }\n    }\n    //---\n    if (elements) {\n      removeElements(this.Elements);\n      if (this.RenderElements) {\n        for (let index = 0; index < num; index++) {\n          if (this.RenderElements[index]) {\n            const bind: IBindObject = this.RenderElements[index];\n            if (bind.ele) {\n              removeElements(bind.ele);\n            } else if (bind.eles) {\n              removeElements(bind.eles);\n            }\n          }\n        }\n        delete this.RenderElements;\n      }\n    }\n    //---\n  }\n\n  refresh() {\n    for (let objdef of this.BindDef) {\n      this.eventPRoxy(TypeEventProxyHandler.UKNOW4, [], undefined, objdef);\n    }\n    if (this.BindMap) {\n      for (let [bind, gtpl] of this.BindMap) {\n        gtpl.launchChange(TypeEventProxyHandler.UKNOW5, bind);\n      }\n    }\n    if (this.BindConst) {\n      for (let bind of this.BindConst) {\n        this.launchChange(TypeEventProxyHandler.UKNOW6, bind);\n      }\n    }\n  }\n\n  addTo(ele: Node | any[]) {\n    //console.log('addTo', ele);\n    if (this.RenderElements) {\n      const render_arr: any = [];\n      const arr = Array.isArray(this.Elements)\n        ? this.Elements\n        : [this.Elements];\n      arr.forEach((ele: Node, index: number) => {\n        if (this.RenderElements[index]) {\n          const bind: IBindObject = this.RenderElements[index];\n          if (bind.ele) {\n            render_arr.push(bind.ele);\n          } else if (bind.eles) {\n            bind.eles.forEach((gtpl: IGtplObject) => gtpl.addTo(render_arr));\n            render_arr.push(bind.mark);\n          }\n        } else {\n          render_arr.push(ele);\n        }\n      });\n      GAddToo(ele, render_arr, this);\n    } else {\n      GAddToo(ele, this.Elements, this);\n    }\n  }\n\n  eventPRoxy(\n    type: TypeEventProxyHandler,\n    path: PathProxyHandler,\n    value: any,\n    objRef: any\n  ) {\n    //log('eventPRoxy', 'event:', type, 'path:', path, 'value:', value, 'objref:', objRef);\n    const pa = pathToArray(path);\n    pa?.shift();\n    iterBind(this.BindTree[objRef.key], type, pa, value).forEach((args: any) =>\n      this.launchChange.apply(this, args)\n    );\n  }\n\n  async launchChange(\n    type: TypeEventProxyHandler,\n    bind: IBindObject,\n    path?: string[],\n    value?: any\n  ) {\n    //log('launchChange' /*, type, bind, path, value*/ );\n    const result = await calculateBind(this, bind, value);\n    let gtpl: IGtplObject = this;\n    switch (bind.type) {\n      case BindTypes.TEXT:\n        gtpl = await updateTEXTbind(type, this, bind, result, path);\n        break;\n      case BindTypes.ATTR:\n        gtpl = await updateATTRbind(type, this, bind, result, path);\n        break;\n      case BindTypes.INNER:\n        gtpl = await updateINNERbind(type, this, bind, result, path);\n        break;\n      case BindTypes.STYLE:\n        gtpl = await updateSTYLEbind(type, this, bind, result, path);\n        break;\n      case BindTypes.IF:\n      case BindTypes.NOTIF:\n        gtpl = await updateIFbind(type, this, bind, result, path);\n        break;\n      case BindTypes.FOR:\n        gtpl = await updateFORbind(type, this, bind, result, path);\n        break;\n      case BindTypes.SWITCH:\n        gtpl = await updateSWITCHbind(type, this, bind, result, path);\n        break;\n      case BindTypes.IS:\n        gtpl = await updateISbind(type, this, bind, result, path);\n        break;\n    }\n    checkRenderElements(gtpl, bind);\n  }\n}\n","import { IVarOrConst, IFunction, IObjParsed } from '../GGenerator';\nimport { TplVar } from '../GGenerator';\nimport { globalObject } from '../global.js';\n\nconst palabrasReservadas = [\n    \"abstract\", \"await\", \"boolean\", \"break\", \"byte\", \"case\", \"catch\",\n    \"char\", \"class\", \"const\", \"continue\", \"debugger\", \"default\", \"delete\",\n    \"do\", \"double\", \"else\", \"enum\", \"export\", \"extends\", \"false\", \"final\",\n    \"finally\", \"float\", \"for\", \"function\", \"goto\", \"if\", \"implements\", \"import\",\n    \"in\", \"instanceof\", \"int\", \"interface\", \"let\", \"long\", \"native\", \"new\",\n    \"null\", \"package\", \"private\", \"protected\", \"public\", \"return\", \"short\",\n    \"static\", \"super\", \"switch\", \"synchronized\", \"this\", \"throw\", \"throws\",\n    \"transient\", \"true\", \"try\", \"typeof\", \"var\", \"void\", \"volatile\", \"while\",\n    \"with\", \"yield\", \"arguments\", \"await\", \"async\", \"eval\"\n];\n\nexport class GParse {\n\n    private s!: string;\n    private i!: number;\n    private l!: number;\n    private r!: (string | IObjParsed)[];\n    private arr_acepted!: number[];\n    private ln!: string | null;\n\n    constructor() {\n        this.setAceptedAN();\n    }\n\n    getResult(): (string | IObjParsed)[] {\n        return this.r;\n    }\n\n    getSingleResult(): IObjParsed {\n        let result: any = null;\n        if (this.r && this.r.length == 1)\n            result = this.r[0];\n        return result;\n    }\n\n    setString(str: string) {\n        this.s = str;\n        this.l = str.length;\n        this.i = 0;\n        this.r = [];\n    }\n\n    setAceptedAN(acepted: string = '_') {\n        this.arr_acepted = Array.from(acepted).map((c: string) => c.charCodeAt(0));\n    }\n\n    isAN(str: string, firstCanNumber: boolean = true) {\n        if (str == undefined)\n            return false;\n        let ok: boolean;\n        for (let i = 0, n = str.length, code = 0; i < n; i++) {\n            code = str.charCodeAt(i);\n            ok = (code > 64 && code < 91) || (code > 96 && code < 123) || this.arr_acepted.indexOf(code) >= 0;\n            if (firstCanNumber)\n                ok = ok || (code > 47 && code < 58);\n            if (ok)\n                continue;\n            return false\n        }\n        return true;\n    }\n\n    checkStart(): boolean {\n        return this.s[this.i] == '{' && this.s[this.i + 1] == '{';\n    }\n\n    checkEnd(): boolean {\n        return this.s[this.i] == '}' && this.s[this.i + 1] == '}';\n    }\n\n    next() {\n        this.i++;\n        if (this.i >= this.l)\n            return false;\n        return true;\n    }\n\n    nop(all: boolean = false, cstop: string | null = null): boolean {\n        let cnow: null | string = null;\n        this.ln = null;\n        while (true) {\n            cnow = this.s[this.i];\n            if (cstop === cnow)\n                return true;\n            let ok = (cnow == ' ' || cnow == '\\t' || cnow == '\\r' || cnow == '\\n');\n            if (!ok && all) {\n                ok = (cnow != '\"' && cnow != \"'\" && !this.isAN(cnow));\n                if (ok) {\n                    this.ln = cnow;\n                }\n            }\n            if (ok) {\n                if (!this.next())\n                    return false;\n                continue;\n            }\n            return true;\n        }\n    }\n\n    getVOrC(): null | IVarOrConst {\n        let cnow = this.s[this.i];\n        if (cnow == '\"' || cnow == \"'\") {\n            return { ct: this.getConst() };\n        } else if (this.isAN(cnow, false)) {\n            return { va: this.getVar() };\n        }\n        return null;\n    }\n\n    getVar(point: boolean = true): null | string[] {\n        let str = this.s[this.i], cnow: null | string = null, acepted: boolean;\n        while (true) {\n            if (!this.next())\n                return str != '' ? str.split('.') : null;\n            cnow = this.s[this.i];\n            acepted = this.isAN(cnow);\n            if (point && !acepted)\n                acepted = cnow == '.';\n            if (acepted) {\n                str += cnow;\n                continue;\n            } else {\n                return str.split('.');\n            }\n        };\n    }\n\n    getConst(): null | string {\n        const into = this.s[this.i];\n        if (!this.next())\n            return null;\n        let str = this.s[this.i];\n        if (str == into) {\n            str = '';\n            if (!this.next())\n                return null;\n            return str;\n        }\n        let cnow: null | string = null, clast: null | string = null;\n        while (true) {\n            if (!this.next())\n                return null;\n            cnow = this.s[this.i];\n            if (cnow == into && clast != '\\\\') {\n                if (!this.next())\n                    return null;\n                return str;\n            }\n            str += cnow;\n            clast = cnow;\n        }\n    }\n\n    check(): boolean {\n\n        let i = 0;\n        let temp = '';\n        let obj: IObjParsed;\n        let vorc: null | IVarOrConst;\n        let cnow: string;\n        let thereare: boolean = false;\n\n        while (true) {\n\n            if (this.checkStart()) {\n\n                thereare = true;\n\n                if (temp != '') {\n                    this.r.push(temp);\n                    temp = '';\n                }\n\n                obj = {};\n\n                this.i += 2;\n\n                i = this.i;\n\n                if (!this.nop())\n                    return false;\n\n                vorc = this.getVOrC();\n\n                if (vorc) {\n\n                    obj.vorc = vorc;\n\n                    cnow = this.s[this.i];\n\n                    if (cnow == undefined)\n                        break;\n\n                    while (true) {\n\n                        if (cnow == ':') {\n\n                            if (!this.next())\n                                return false;\n\n                            const fnc = this.getVar();\n\n                            if (fnc === null)\n                                return false;\n\n                            if (!obj.functions)\n                                obj.functions = [];\n\n                            const func: IFunction = { name: fnc };\n\n                            obj.functions.push(func);\n\n                            cnow = this.s[this.i];\n\n                            if (cnow == undefined)\n                                break;\n\n                            if (cnow == '(') {\n\n                                if (!this.next())\n                                    return false;\n\n                                cnow = this.s[this.i];\n\n                                if (cnow == ')') {\n\n                                    if (!this.next())\n                                        return false;\n\n                                    cnow = this.s[this.i];\n\n                                    continue;\n                                }\n\n                                while (true) {\n\n                                    vorc = this.getVOrC();\n\n                                    if (!vorc)\n                                        return false;\n\n                                    cnow = this.s[this.i];\n\n                                    if (!func.params)\n                                        func.params = [];\n\n                                    func.params.push(vorc);\n\n                                    if (cnow == undefined)\n                                        break;\n\n                                    if (cnow == ',') {\n                                        if (!this.next())\n                                            return false;\n                                        cnow = this.s[this.i];\n                                        continue;\n                                    }\n\n                                    if (cnow == ')') {\n                                        if (!this.next())\n                                            return false;\n                                        cnow = this.s[this.i];\n                                        break;\n                                    }\n\n                                }\n\n                            }\n\n                        } else if (cnow == '#') {\n\n                            if (!this.next())\n                                return false;\n\n                            vorc = this.getVOrC();\n\n                            if (!vorc)\n                                return false;\n\n                            if (!obj.params)\n                                obj.params = [];\n\n                            obj.params.push(vorc);\n\n                            cnow = this.s[this.i];\n\n                        } else {\n\n                            break;\n\n                        }\n                    }\n\n                    if (cnow == ';') {\n\n                        if (!this.next())\n                            return false;\n\n                        const index = this.getVar(false);\n\n                        if (index === null)\n                            return false;\n\n                        cnow = this.s[this.i];\n\n                        if (cnow == ';') {\n\n                            if (!this.next())\n                                return false;\n\n                            const target = this.getVar(false);\n\n                            if (target === null)\n                                return false;\n\n                            obj.index = { index: index.join(''), target: target.join('') };\n\n                        } else {\n\n                            return false;\n\n                        }\n\n                    }\n\n                    if (!this.nop())\n                        return false;\n\n                    if (this.checkEnd()) {\n\n                        this.i++;\n\n                        this.r.push(obj);\n\n                    } else {\n\n                        if (!this.searchFormula(i))\n                            return false;\n\n                    }\n\n                } else {\n\n                    if (!this.searchFormula(i))\n                        return false;\n\n                }\n\n            } else {\n\n                temp += this.s[this.i];\n\n            }\n\n            if (!this.next())\n                break;\n\n        }\n\n        if (temp != '')\n            this.r.push(temp);\n\n        return thereare;\n\n    }\n\n    searchFormula(i: number): boolean {\n\n        let temp = this.s.substring(i, this.i);\n\n        while (true) {\n\n            if (this.checkEnd()) {\n\n                this.i++;\n\n                this.r.push({ formula: { code: temp, vars: this.findVars(temp) } });\n\n                temp = '';\n\n                break;\n\n            } else {\n\n                temp += this.s[this.i];\n\n                if (!this.next())\n                    return false;\n\n            }\n\n        }\n\n        return true;\n    }\n\n    findVars(str: string): TplVar[] {\n        const s = this.s;\n        const l = this.l;\n        const i = this.i;\n        this.s = str;\n        this.l = str.length;\n        this.i = 0;\n        let arr: TplVar[] = [], ret: null | IVarOrConst = null;\n        let ignoreall: boolean = false;\n        let cstop: string[] = [];\n        let ignore: any = [[]];\n        let declares = ['const', 'var', 'let'];\n        let arrowIndex: null | number = null;\n        while (true) {\n            let cs = cstop.length ? cstop[cstop.length - 1] : null;\n            if (arrowIndex !== null) {\n                if (cs == '}' || cs === null) {\n                    cs = '>';\n                } else {\n                    arrowIndex = null;\n                }\n            }\n            if (!this.nop(true, cs))\n                break;\n            if (cs !== null) {\n                let current = this.s[this.i];\n                if (current == '>') {\n                    if (!this.next())\n                        break;\n                    if (this.ln == '=' && arrowIndex !== null) {\n                        ignore.push(arr.splice(arrowIndex).map(v => v[0]));\n                        if (!this.nop(true, '{'))\n                            break;\n                        current = this.s[this.i];\n                        if (current == '{') {\n                            cstop.push('}');\n                        } else {\n                            ignore.pop();\n                        }\n                    }\n                    arrowIndex = null;\n                    continue;\n                }\n                if (current == '(') {\n                    //console.log('current', current, cstop.join());\n                    ignoreall = true;\n                    cstop.pop();\n                    cstop.push(')');\n                    if (!this.next())\n                        break;\n                    continue;\n                }\n                if (current == ')') {\n                    //console.log('current', current, cstop.join());\n                    ignoreall = false;\n                    cstop.pop();\n                    cstop.push('{');\n                    if (!this.next())\n                        break;\n                    continue;\n                }\n                if (current == '{') {\n                    //console.log('current', current, cstop.join());\n                    cstop.pop();\n                    cstop.push('}');\n                    if (!this.next())\n                        break;\n                    continue;\n                }\n                if (current == '}') {\n                    //console.log('current', current, cstop.join());\n                    cstop.pop();\n                    ignore.pop();\n                    //console.log('ignore pop', ignore[ignore.length - 1].join());\n                    if (!this.next())\n                        break;\n                    continue;\n                }\n            }\n            ret = this.getVOrC();\n            if (ret && ret.va) {\n                const va = ret.va;\n                if (palabrasReservadas.indexOf(va[0]) >= 0) {\n                    if (ret.va[0] == 'function') {\n                        //console.log('function');\n                        ignore.push([]);\n                        cstop.push('(');\n                    } else if (declares.includes(va[0])) {\n                        if (!this.nop(true))\n                            break;\n                        ret = this.getVOrC();\n                        if (ret && ret.va) {\n                            ignore[ignore.length - 1].push(ret.va[0]);\n                            //console.log('declare', va[0], ignore[ignore.length - 1].join());\n                        }\n                    }\n                    continue;\n                }\n                if (globalObject.hasOwnProperty(va[0]))\n                    continue;\n                if (this.ln == '.') {\n                    continue;\n                }\n                if (ignoreall) {\n                    ignore[ignore.length - 1].push(va[0]);\n                } else {\n                    if (ignore.length) {\n                        if (ignore.some((list: any) => list.includes(va[0]))) {\n                            continue;\n                        }\n                    }\n                    if (!arr.some(list => list[0] == va[0])) {\n                        if (this.ln == '(') {\n                            arrowIndex = arr.length;\n                        } else if (this.ln != ',' && arrowIndex !== null) {\n                            arrowIndex = null;\n                        }\n                        //console.log('valid', va);\n                        arr.push(va);\n                    }\n                }\n            } else if (!this.next()) {\n                break;\n            }\n        }\n        this.s = s;\n        this.i = i;\n        this.l = l;\n        return arr;\n    }\n\n}","import { NodeTypes, BindTypes } from '../GEnums';\nimport { GParse } from './GParse';\nimport { IBindObject, IFormula, IObjParsed } from '../GGenerator';\nimport { css2obj, log, style2css } from '../GUtils';\nimport { AttrType, ProGen } from '../GGenerator';\n\nlet gparse!: GParse;\nlet gcont: number = 0;\nlet gcontchar: number = 0;\nconst regex_var = /([a-zA-Z\\_][\\w]+)\\s*\\=\\s*([a-zA-Z][\\w\\.]+)/gi;\n\nfunction getGen(nodeName: string, atributos: string | null, nodelist?: string | null): string {\n    return 'g(\\'' + nodeName + '\\',' + (atributos ? atributos : 'null') + ',' + (nodelist ? nodelist : 'null') + ',o)';\n}\n\nfunction getFunction(gen: string, parent?: any, commongen?: any): string {\n    if (commongen) {\n        let str: string[] = [];\n        commongen.forEach((com: any) => {\n            str.push('const ' + com.var + '=' + com.gen + ';');\n        });\n        return '((o)=>{' + str.join('') + 'return ' + gen + '})' + (!parent ? '(o)' : '');\n    }\n    return '((o)=>' + gen + ')' + (!parent ? '(o)' : '');\n}\n\nfunction addGen2Obj(bind: IBindObject, uuid: null | string, gen?: ProGen, plus?: string) {\n    let jsonBind: string = Attributes2JSON([bind], true);\n    jsonBind = jsonBind.substring(0, jsonBind.length - 1);\n    jsonBind = jsonBind + ',\"gen\":' + (gen ? gen : uuid) + (plus ? plus : '') + '}';\n    return jsonBind;\n}\n\nfunction addGen2ObjConditional(bind: IBindObject, uuid: string, bind_for: IBindObject | null, jsonAttr2: string, jsonAttr: string, plus?: string) {\n    bind.uid = uuid;\n    if (bind_for) {\n        if (jsonAttr2 != '')\n            jsonAttr2 += ',';\n        jsonAttr2 += addGen2Obj(bind, uuid, undefined, plus);\n    } else {\n        if (jsonAttr != '')\n            jsonAttr += ',';\n        jsonAttr += addGen2Obj(bind, uuid, undefined, plus);\n    }\n    return { jsonAttr2, jsonAttr };\n}\n\nfunction parseAttribute(atributos: AttrType[], prop: string, value: string): boolean {\n    let tt: null | BindTypes = null;\n    switch (prop) {\n        case 'g-is':\n            tt = tt || BindTypes.IS;\n        case 'g-binds':\n            tt = tt || BindTypes.ELES;\n        case 'g-bind':\n            tt = tt || BindTypes.ELE;\n        case 'g-attr':\n            tt = tt || BindTypes.ATTR;\n        case 'g-if':\n            tt = tt || BindTypes.IF;\n        case 'g-notif':\n            tt = tt || BindTypes.NOTIF;\n        case 'g-switch':\n            tt = tt || BindTypes.SWITCH;\n        case 'g-case':\n            tt = tt || BindTypes.CASE;\n        case 'g-for':\n            tt = tt || BindTypes.FOR;\n        case 'g-inner':\n            tt = tt || BindTypes.INNER;\n            gparse.setString(`{{${value}}}`);\n            if (gparse.check()) {\n                const attrObj = {\n                    type: tt,\n                    link: gparse.getSingleResult()\n                };\n                if (tt === BindTypes.IS) {\n                    atributos.unshift(attrObj);\n                } else {\n                    atributos.push(attrObj);\n                }\n                return true;\n            }\n            break;\n        case 'g-var':\n            tt = tt || BindTypes.VAR;\n            if (value.match(regex_var)) {\n                const vars = value.split(regex_var);\n                atributos.push({\n                    type: tt,\n                    link: {\n                        svar: vars[1],\n                        vorc: {\n                            va: vars[2].split('.')\n                        }\n                    }\n                });\n                return true;\n            }\n            break;\n        case 'g-tpl':\n            tt = tt || BindTypes.TPL;\n            atributos.push({\n                type: tt,\n                link: {\n                    vorc: {\n                        ct: value\n                    }\n                }\n            });\n            return true;\n        case 'style':\n            let csstext: string = '';\n            gparse.setString(value);\n            if (gparse.check()) {\n                let r: any = gparse.getResult();\n                if (r && r.length) {\n                    if (r.length == 1) {\n                        atributos.push({\n                            type: BindTypes.STYLE,\n                            prop: 'cssText',\n                            link: <any>r[0]\n                        });\n                        return true;\n                    }\n                    const cssobj = css2obj(value);\n                    for (const [key, val] of Object.entries(cssobj)) {\n                        gparse.setString(<string>val);\n                        if (gparse.check()) {\n                            r = gparse.getSingleResult();\n                            atributos.push({\n                                type: BindTypes.STYLE,\n                                prop: key,\n                                link: r\n                            });\n                        } else {\n                            csstext += csstext ? ';' : '';\n                            csstext += `${style2css(key)}:${val}`;\n                        }\n                    }\n                    if (csstext != '')\n                        atributos.push(['style', csstext]);\n                    return true;\n                }\n            }\n            break;\n        default:\n            gparse.setString(value);\n            if (gparse.check()) {\n                const r = gparse.getResult();\n                if (r && r.length == 1) {\n                    const attrObj = {\n                        type: prop.startsWith('on') ? BindTypes.EVENT : BindTypes.ATTR,\n                        prop: prop.startsWith('on') ? prop.substring(2) : prop,\n                        link: <any>r[0]\n                    };\n                    atributos.push(attrObj);\n                    return true;\n                }\n            }\n            break;\n    }\n    return false;\n}\n\n/*\nfunction Attributes2JSON(atributos: AttrType[], onlyone: boolean = false): string {\n    const json: string[] = [];\n    atributos.forEach((attr: AttrType) => {\n        if (Array.isArray(attr) || typeof attr == 'string') {\n            json.push(JSON.stringify(attr));\n        } else {\n            const bind: IBindObject = <IBindObject>attr;\n            if (bind.link && bind.link.formula) {\n                const obj: string[] = [];\n                for (let i in bind) {\n                    const nivel1: any = (<any>bind)[i];\n                    if (obj.length)\n                        obj.push(',');\n                    if (i == 'link') {\n                        obj.push('\"link\":{');\n                        for (let ii in nivel1) {\n                            const nivel2 = nivel1[ii];\n                            if (obj[obj.length - 1] != '\"link\":{')\n                                obj.push(',');\n                            if (ii == 'formula') {\n                                obj.push('\"formula\":{');\n                                if (nivel2.vars)\n                                    obj.push('\"vars\":' + JSON.stringify(nivel2.vars) + ',');\n                                let isasync = '';\n                                if (nivel2.code.match(/[\\s\\;\\r\\n]await[\\W]/gm))\n                                    isasync = ' async ';\n                                if (nivel2.code.match(/[\\s\\;\\r\\n]return[\\W]/gm)) {\n                                    obj.push('\"fnc\":' + isasync + 'function(' +\n                                        (nivel2.vars ? (nivel2.vars.map((arr: any) => arr[0]).join(',')) : '') +\n                                        '){' +\n                                        nivel2.code +\n                                        '}');\n                                } else {\n                                    obj.push('\"fnc\":' + isasync + 'function(' +\n                                        (nivel2.vars ? (nivel2.vars.map((arr: any) => arr[0]).join(',')) : '') +\n                                        '){return(' +\n                                        nivel2.code +\n                                        ')}');\n                                }\n                                obj.push('}');\n                            } else {\n                                obj.push(JSON.stringify(ii) + ':' + JSON.stringify(nivel2));\n                            }\n                        }\n                        obj.push('}');\n                    } else {\n                        obj.push(JSON.stringify(i) + ':' + JSON.stringify(nivel1));\n                    }\n                }\n                json.push('{' + obj.join('') + '}');\n            } else {\n                json.push(JSON.stringify(attr));\n            }\n        }\n    });\n    if (onlyone)\n        return json.join(',');\n    return '[' + json.join(',') + ']';\n}\n*/\n\nfunction Attributes2JSON(atributos: AttrType[], onlyone: boolean = false): string {\n    const json = atributos.map(attr => {\n        if (Array.isArray(attr) || typeof attr === 'string') {\n            return JSON.stringify(attr);\n        } else {\n            const bind = attr as IBindObject;\n            if (bind.link?.formula) {\n                const obj = Object.entries(bind).map(([key, value]) => {\n                    if (key === 'link') {\n                        const linkObj = Object.entries(value).map(([subKey, subValue]) => {\n                            if (subKey === 'formula') {\n                                const { vars, code } = subValue as IFormula;\n                                if (code != undefined) {\n                                    const fncParams = vars?.map(v => v[0]).join(',') || '';\n                                    const isAsync = code.match(/[\\s;]await[\\W]/gm) ? ' async ' : '';\n                                    const fncBody = `{${code}}`;\n                                    return `\"${subKey}\":{\"vars\":${JSON.stringify(vars)},\"fnc\":${isAsync}function(${fncParams})${fncBody}}`;\n                                } else {\n                                    log('formula without code');\n                                }\n                            }\n                            return `\"${subKey}\":${JSON.stringify(subValue)}`;\n                        }).join(',');\n                        return `\"${key}\":{${linkObj}}`;\n                    }\n                    return `\"${key}\":${JSON.stringify(value)}`;\n                }).join(',');\n                return `{${obj}}`;\n            } else {\n                return JSON.stringify(attr);\n            }\n        }\n    });\n    return onlyone ? json.join(',') : `[${json.join(',')}]`;\n}\n\nfunction obtenerPrefijoChar(n: number) {\n    const letras = 'abcdefghijklmnopqrstuvwxyz';\n    let prefijo = '';\n    prefijo += letras[Math.floor(n / letras.length)];\n    prefijo += letras[n % letras.length];\n    return prefijo;\n}\n\nfunction getId() {\n    gcont++;\n    if (gcont > 9999) {\n        gcontchar = 1;\n        gcontchar++;\n    }\n    return obtenerPrefijoChar(gcontchar) + String(gcont).padStart(4, '0');\n}\n\nasync function NodeList2Function(nodes: NodeListOf<ChildNode> | Node[], parent?: any, headers?: boolean, bindSwitch?: null | IBindObject): Promise<string> {\n    //---\n    if (gparse == null)\n        gparse = new GParse();\n    //---\n    let parse: string = '';\n    if (headers !== false)\n        parse = '[';\n    //---\n    let bind_for: null | IBindObject,\n        bind_switch: null | IBindObject,\n        bind_case: null | IBindObject,\n        bind_if: null | IBindObject,\n        bind_is: null | IBindObject,\n        bind_tpl: null | IBindObject;\n    let ele: HTMLElement, real: undefined | HTMLElement | Node;\n    let childs: NodeListOf<ChildNode>;\n    let childsnodes: string,\n        jsonAttr: string,\n        jsonAttr2: string,\n        jsonBind: string,\n        attrs: string;\n    let atributos: AttrType[];\n    let uuid: string;\n    //---\n    for (var i = 0, fin = nodes.length; i < fin; i++) {\n        var node = nodes[i];\n        bind_for = bind_switch = bind_case = bind_if = bind_is = bind_tpl = null;\n        childsnodes = jsonAttr = jsonAttr2 = jsonBind = attrs = '';\n        switch (node.nodeType) {\n            case NodeTypes.ELEMENT_NODE:\n                {\n                    //---\n                    if (node.nodeName.toLowerCase() == 'script') {\n                        if (parse != '[')\n                            parse += ',';\n                        parse += getGen(node.nodeName, JSON.stringify(node.textContent));\n                        continue;\n                    }\n                    //---\n                    ele = <HTMLElement>node;\n                    atributos = [];\n                    for (let i = 0, n = ele.attributes.length, ref: NamedNodeMap = ele.attributes; i < n; i++) {\n                        const attr = ref.item(i);\n                        if (attr) {\n                            if (!parseAttribute(atributos, attr.name, attr.value)) {\n                                atributos.push([attr.name, attr.value]);\n                            } else if (atributos.length) {\n                                const bind: any = atributos[atributos.length - 1];\n                                if (bind) {\n                                    if (bind.type == BindTypes.IS) {\n                                        bind_is = <IBindObject>bind;\n                                        atributos.pop();\n                                    }\n                                    if (bind.type == BindTypes.IF || bind.type == BindTypes.NOTIF) {\n                                        bind_if = <IBindObject>bind;\n                                        atributos.pop();\n                                    }\n                                    if (bind.type == BindTypes.FOR) {\n                                        bind_for = <IBindObject>bind;\n                                        atributos.pop();\n                                    }\n                                    if (bind.type == BindTypes.SWITCH) {\n                                        bind_switch = <IBindObject>bind;\n                                        atributos.pop();\n                                    }\n                                    if (bind.type == BindTypes.CASE) {\n                                        if (!bindSwitch)\n                                            throw new Error('not switch');\n                                        if (!bindSwitch.case)\n                                            bindSwitch.case = [];\n                                        bindSwitch.case.push(bind);\n                                        bind_case = <IBindObject>bind;\n                                        bind_case.index = bindSwitch.case.length - 1;\n                                        atributos.pop();\n                                    }\n                                    if (bind.type == BindTypes.TPL) {\n                                        bind_tpl = <IBindObject>bind;\n                                        atributos.pop();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    //---\n                    if (bind_for && bind_case)\n                        throw new Error('not for and case ' + Array.from(ele.attributes, (item) => item.name + '=\"' + item.value + '\"').join(' '));\n                    if (bind_if && bind_case)\n                        throw new Error('not if and case ' + Array.from(ele.attributes, (item) => item.name + '=\"' + item.value + '\"').join(' '));\n                    if (bind_is && (bind_case || bind_switch || bind_tpl))\n                        throw new Error('not is and ( case or switch ot tpl ) ' + Array.from(ele.attributes, (item) => item.name + '=' + item.value + '\"').join(' '));\n                    //---\n                    if (parse != '[' && parse != '')\n                        parse += ',';\n                    //---\n                    if (bind_tpl) {\n                        const ct: any = (<any>bind_tpl).link.vorc.ct;\n                        const tpl = document.getElementById(ct);\n                        if (tpl) {\n                            real = (ele.nodeName.toLowerCase() == 'template') ? parent : ele;\n                            childs = (tpl.nodeName.toLowerCase() == 'template') ? (<any>tpl).content.childNodes : [tpl];\n                            childsnodes = await NodeList2Function(childs, real, true, bind_switch);\n                        } else {\n                            /** @TODO better fetch **/\n                            const tpl = await (await fetch(ct)).text();\n                            const parser = new DOMParser();\n                            const doc = parser.parseFromString(tpl.trim(), \"text/html\");\n                            childsnodes = await NodeList2Function(doc.body.childNodes, real, true, bind_switch);\n                        }\n                    } else {\n                        real = (ele.nodeName.toLowerCase() == 'template') ? (<any>ele).content : ele;\n                        childs = (<any>real).childNodes;\n                        childsnodes = await NodeList2Function(childs, real, true, bind_switch);\n                    }\n                    //---\n                    if (bind_is || bind_if || bind_case || bind_for || bind_switch) {\n\n                        uuid = getId();\n\n                        jsonAttr = '';\n                        jsonAttr2 = '';\n\n                        const common: any = [];\n\n                        attrs = Attributes2JSON(atributos);\n\n                        if (bind_is) {\n                            ({ jsonAttr2, jsonAttr } = addGen2ObjConditional(bind_is, uuid, bind_for, jsonAttr2, jsonAttr));\n                        }\n\n                        if (bind_if) {\n                            ({ jsonAttr2, jsonAttr } = addGen2ObjConditional(bind_if, uuid, bind_for, jsonAttr2, jsonAttr));\n                        }\n\n                        if (bind_switch) {\n                            bind_switch.uid = uuid;\n                            const cases = bind_switch.case;\n                            delete bind_switch.case;\n                            //---\n                            jsonBind = '';\n                            if (cases) {\n                                cases.forEach((ccase: IBindObject) => {\n                                    if (ccase.common) {\n                                        ccase.common.forEach((com: any) => common.push(com));\n                                        delete ccase.common;\n                                    }\n                                    if (ccase.gen) {\n                                        const gen = ccase.gen;\n                                        delete ccase.gen;\n                                        if (jsonBind != '')\n                                            jsonBind += ',';\n                                        jsonBind += addGen2Obj(ccase, null, gen);\n                                    }\n                                });\n                            }\n                            //---\n                            ({ jsonAttr2, jsonAttr } = addGen2ObjConditional(bind_switch, uuid, bind_for, jsonAttr2, jsonAttr, ',\"case\":[' + jsonBind + ']'));\n                            //---\n                        }\n\n                        if (bind_tpl) {\n\n                            if (ele.nodeName.toLowerCase() == 'template') {\n\n                                common.push({\n                                    'var': uuid,\n                                    'gen': childsnodes\n                                });\n\n                            } else {\n\n                                common.push({\n                                    'var': uuid,\n                                    'gen': getFunction(getGen(ele.nodeName, attrs, childsnodes), true)\n                                });\n\n                            }\n\n                        } else {\n\n                            common.push({\n                                'var': uuid,\n                                'gen': bind_is ? 'null' : getFunction(getGen(ele.nodeName, attrs, childsnodes), true)\n                            });\n\n                        }\n\n                        if (bind_case) {\n\n                            bind_case.uid = uuid;\n                            bind_case.gen = uuid;\n                            bind_case.common = common;\n\n                            parse += getFunction(getGen('#comment', '[' + JSON.stringify(uuid) + ',' + jsonAttr + ']'), parent);\n\n                        } else {\n\n                            if (bind_for) {\n\n                                if (bind_if || bind_is || bind_switch) {\n\n                                    bind_for.uid = getId();\n                                    if (jsonAttr != '')\n                                        jsonAttr += ',';\n                                    jsonAttr += addGen2Obj(bind_for, bind_for.uid);\n\n                                    // jsonAttr2 -> solo if, notif, switch, is ...\n\n                                    common.push({\n                                        'var': bind_for.uid,\n                                        'gen': getFunction(getGen('#comment', '[' + JSON.stringify(uuid) + ',' + jsonAttr2 + ']'), true)\n                                    });\n\n                                } else {\n\n                                    bind_for.uid = uuid;\n                                    if (jsonAttr != '')\n                                        jsonAttr += ',';\n                                    jsonAttr += addGen2Obj(bind_for, uuid);\n\n                                }\n\n                                // jsonAttr -> solo for\n\n                                parse += getFunction(getGen('#comment', '[' + JSON.stringify(bind_for.uid) + ',' + jsonAttr + ']'), parent, common);\n\n                            } else {\n\n                                // jsonAttr -> solo if, notif, switch, is ...\n\n                                parse += getFunction(getGen('#comment', '[' + JSON.stringify(uuid) + ',' + jsonAttr + ']'), parent, common);\n\n                            }\n\n                        }\n\n                    } else {\n\n                        if (bind_tpl) {\n\n                            if (ele.nodeName.toLowerCase() == 'template') {\n\n                                parse += childsnodes;\n\n                            } else {\n\n                                parse += getFunction(getGen(ele.nodeName, Attributes2JSON(atributos), childsnodes), parent);\n\n                            }\n\n                        } else {\n\n                            parse += getFunction(getGen(ele.nodeName, Attributes2JSON(atributos), childsnodes), parent);\n\n                        }\n\n                    }\n                    //---\n                }\n                break;\n            case NodeTypes.TEXT_NODE:\n                {\n                    let normal: boolean = true;\n                    if (node.nodeValue) {\n                        gparse.setString(node.nodeValue);\n                        if (gparse.check()) {\n                            normal = false;\n                            const r = gparse.getResult();\n                            if (r && r.length) {\n                                r.forEach((item: string | IObjParsed) => {\n                                    if (parse != '[' && parse != '')\n                                        parse += ',';\n                                    if (typeof item == 'string') {\n                                        parse += getGen(node.nodeName, JSON.stringify(item));\n                                    } else {\n                                        parse += getGen(node.nodeName, Attributes2JSON([{\n                                            type: BindTypes.TEXT,\n                                            prop: 'textContent',\n                                            link: item\n                                        }]));\n                                    }\n                                });\n                            }\n                        }\n                    }\n                    if (normal) {\n                        if (parse != '[' && parse != '')\n                            parse += ',';\n                        parse += getGen(node.nodeName, JSON.stringify(node.nodeValue));\n                    }\n                }\n                break;\n            case NodeTypes.COMMENT_NODE:\n                {\n                    if (parse != '[' && parse != '')\n                        parse += ',';\n                    parse += getGen(node.nodeName, JSON.stringify(node.nodeValue));\n                }\n                break;\n        }\n    };\n    if (headers !== false)\n        parse += ']';\n    if (parent === undefined)\n        return '(o)=>' + parse;\n    return parse;\n}\n\nexport async function GCode(html: string | Node | NodeListOf<ChildNode>): Promise<string> {\n    if (typeof html == 'string') {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html.trim(), \"text/html\");\n        return NodeList2Function(doc.body.childNodes);\n    } else {\n        return NodeList2Function(html instanceof Node ? [html] : html);\n    }\n}","\nimport { GTpl } from \"../GTpl\";\nimport { GGenerator, GCompile, GAddToo } from \"../GGenerator\";\nimport { STACK, css2obj, style2css } from \"../GUtils\";\nimport { GCode } from \"../compiler/GCode\";\nimport { globalObject, passiveSupported } from \"../global\";\nimport { ISPROXY, PROXYTARGET } from \"../GProxy\";\n\nexport default {\n    'GTpl': GTpl,\n    'GGenerator': GGenerator,\n    'GAddToo': GAddToo,\n    'jit': {\n        'GCompile': GCompile,\n        'GCode': GCode\n    },\n    'utils': {\n        'stack': STACK,\n        'css2obj': css2obj,\n        'style2css': style2css,\n        'globalObject': globalObject,\n        'passiveSupported': passiveSupported,\n        'PROXYTARGET': PROXYTARGET,\n        'ISPROXY': ISPROXY\n    }\n};\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","css2obj","css","s","toLowerCase","replace","m","toUpperCase","split","i","n","length","style2css","toLocaleLowerCase","typeArray","isStaticType","val","type","indexOf","log","args","console","STACK","push","Error","shift","stack","ISPROXY","Symbol","PROXYTARGET","GProxy","target","event","objRef","parent","Proxy","ojRef","receiver","ret","Reflect","set","value","deleteProperty","undefined","getProxyHandler","pathToArray","path","arr","forEach","p","Array","isArray","bindNode","bind","node","mark","ele","appendChildsFromFnc","childs","objRoot","child","appendChild","createElement","nodeName","attributes","fncChilds","tempvar","document","createTextNode","textContent","createComment","attr","error","addBind","setAttribute","GGenerator","GAddToo","temp","check","it","Math","self","ex","globalObject","ptemp","options","passive","addEventListener","removeEventListener","err","passiveSupported","globalCache","binitChangeEvents","privateProperties","static","WeakMap","init","gtpl","globalVar","has","GenerationFinish","MarkEle","memValues","renderElements","Set","getProperty","setProperty","simetricAttr","addCheckRenderElement","re","add","updateVar","va","ctx","force","reduce","index","fin","Root","reduceVar","name","limit","result","getValue","async","reduceFnc","functions","initval","func","getContext","fnc","arrval","params","param","ct","apply","message","calculateBind","me","extraarguments","link","formula","vars","vorc","createGetterAndSetter","BindTree","objdef","pro","BindDef","eventPRoxy","newval","addBind2Object","ref","BindMap","Map","tree","getBind2Object","delBind","delete","searchBind","encontrado","removeElements","elements","element","destroy","parentNode","removeChild","iterBind","btree","base","checkMarkEle","bresult","gen","show","remove","insertBefore","hide","insert","renderBind","render","getElementIndex","canrender","allok","checks","checkMarkRender","RenderElements","Elements","createGTpl","objindex","elementos","row","refresh","generator","context","GTpl","ID","FncElements","BindConst","GtplChilds","Parent","Context","constructor","random","toString","slice","loadOptions","getGtplRoot","getRoot","svar","join","checkBindVar","preventDefault","checkBindEvent","checkBindFormula","startsWith","endsWith","changeEvent","initChangeEvents","simetric","original","getOwnPropertyDescriptor","checkSimetricBind","checkBind","launchChange","num","eles","addTo","render_arr","pa","updateTEXTbind","updateProperty","removeAttribute","getAttribute","attrs","filter","updateATTRbind","innerHTML","updateINNERbind","style","updateSTYLEbind","updateIFbind","delete_arr","isNaN","newgtpl","splice","ppath","update","rowinfo","renderindex","all","updateFORbind","case","gtplcase","refCase","mcobj","childNodes","nodeType","ca","uid","updateSWITCHbind","updateISbind","originalbind","marca","checkRenderElements","palabrasReservadas","GParse","l","r","arr_acepted","ln","setAceptedAN","getResult","getSingleResult","setString","str","acepted","from","map","c","charCodeAt","isAN","firstCanNumber","ok","code","checkStart","checkEnd","next","nop","cstop","cnow","getVOrC","getConst","getVar","point","into","clast","thereare","searchFormula","substring","findVars","ignoreall","ignore","declares","arrowIndex","cs","current","v","pop","includes","some","list","gparse","gcont","gcontchar","regex_var","getGen","atributos","nodelist","getFunction","commongen","com","var","addGen2Obj","uuid","plus","jsonBind","Attributes2JSON","addGen2ObjConditional","bind_for","jsonAttr2","jsonAttr","parseAttribute","tt","attrObj","unshift","match","csstext","cssobj","entries","onlyone","json","JSON","stringify","subKey","subValue","fncParams","isAsync","fncBody","getId","letras","prefijo","floor","obtenerPrefijoChar","String","padStart","NodeList2Function","nodes","headers","bindSwitch","bind_switch","bind_case","bind_if","bind_is","bind_tpl","real","childsnodes","parse","item","tpl","getElementById","content","fetch","text","doc","DOMParser","parseFromString","trim","body","common","cases","ccase","normal","nodeValue","gcode","ggenerator","html","Node"],"sourceRoot":""}